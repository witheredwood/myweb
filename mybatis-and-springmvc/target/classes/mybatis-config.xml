<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <!-- Mybatis配置文件。属性放置的前后顺序是固定的 -->

    <!-- 加载.properties文件-->
    <properties resource="db.properties"/>


    <!-- 缓存的参数和日志 -->
    <settings>
        <!-- 打开延迟加载的开关 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 将积极加载改为消极加载（即按需加载） -->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 打开全局缓存开关（二级缓存），默认值是true -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 设置执行sql语句后打印结果 -->
        <setting name="logImpl" value="LOG4J"/>
    </settings>

    <!-- 别名定义。该路径下的Java实体类都可以拥有一个别名（即首字母小写的别名） -->
    <typeAliases>
        <package name="com.com.withered.pojo"/>
    </typeAliases>

<!--    <environments default="development">-->
<!--        <environment id="development">-->
<!--            &lt;!&ndash; 使用JDBC事务管理。如果使用 Spring + MyBatis，则没有必要配置事务管理器 &ndash;&gt;-->
<!--            <transactionManager type="JDBC"></transactionManager>-->
<!--            &lt;!&ndash; 数据库连接池 &ndash;&gt;-->
<!--            <dataSource type="POOLED">  &lt;!&ndash; POOLED：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来，避免了创建新的连接实例时所必需的初始化和认证时间。 &ndash;&gt;-->
<!--                <property name="driver" value="${jdbc.driver}"/>-->
<!--                <property name="url" value="${jdbc.url}"/>-->
<!--                <property name="username" value="${jdbc.username}"/>-->
<!--                <property name="password" value="${jdbc.password}"/>-->
<!--            </dataSource>-->
<!--        </environment>-->
<!--    </environments>-->

    <!-- 加载映射文件 -->
    <mappers>
        <!-- 批量加载mapper -->
        <package name="com.com.withered.dao"/>
    </mappers>

</configuration>