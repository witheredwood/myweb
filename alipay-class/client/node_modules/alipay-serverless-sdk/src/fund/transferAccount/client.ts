// This file is auto-generated, don't edit it
import CloudKernel from 'mpserverless-sdk-core';
import * as $tea from '@alicloud/tea-typescript';

export class AlipayFundTransUniTransferResponse extends $tea.Model {
  code: string;
  msg: string;
  subCode: string;
  subMsg: string;
  status: string;
  transDate: string;
  outBizNo: string;
  orderId: string;
  payFundOrderId: string;
  static names(): { [key: string]: string } {
    return {
      code: 'code',
      msg: 'msg',
      subCode: 'subCode',
      subMsg: 'subMsg',
      status: 'status',
      transDate: 'transDate',
      outBizNo: 'outBizNo',
      orderId: 'orderId',
      payFundOrderId: 'payFundOrderId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      code: 'string',
      msg: 'string',
      subCode: 'string',
      subMsg: 'string',
      status: 'string',
      transDate: 'string',
      outBizNo: 'string',
      orderId: 'string',
      payFundOrderId: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class AlipayFundTransCommonQueryResponse extends $tea.Model {
  code: string;
  msg: string;
  subCode: string;
  subMsg: string;
  outBizNo: string;
  orderId: string;
  payFundOrderId: string;
  status: string;
  transAmount: string;
  payDate: string;
  arrivalTimeEnd: string;
  orderFee: string;
  errorCode: string;
  failReason: string;
  static names(): { [key: string]: string } {
    return {
      code: 'code',
      msg: 'msg',
      subCode: 'subCode',
      subMsg: 'subMsg',
      outBizNo: 'outBizNo',
      orderId: 'orderId',
      payFundOrderId: 'payFundOrderId',
      status: 'status',
      transAmount: 'transAmount',
      payDate: 'payDate',
      arrivalTimeEnd: 'arrivalTimeEnd',
      orderFee: 'orderFee',
      errorCode: 'errorCode',
      failReason: 'failReason',
    };
  }

  static types(): { [key: string]: any } {
    return {
      code: 'string',
      msg: 'string',
      subCode: 'string',
      subMsg: 'string',
      outBizNo: 'string',
      orderId: 'string',
      payFundOrderId: 'string',
      status: 'string',
      transAmount: 'string',
      payDate: 'string',
      arrivalTimeEnd: 'string',
      orderFee: 'string',
      errorCode: 'string',
      failReason: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}


export default class Client {
  _kernel: CloudKernel;

  constructor(_kernel: CloudKernel) {
    this._kernel = _kernel;
  }


  async transfer(outBizNo: string, transAmount: string, payee: {[key: string]: any}, orderTitle: string): Promise<AlipayFundTransUniTransferResponse> {
    let params : {[key: string ]: any} = {
      out_biz_no: outBizNo,
      trans_amount: transAmount,
      product_code: "TRANS_ACCOUNT_NO_PWD",
      biz_scene: "DIRECT_TRANSFER",
      payee_info: payee,
      order_title: orderTitle,
    };
    return $tea.cast<AlipayFundTransUniTransferResponse>(await this._kernel.invoke("alipay.fund.trans.uni.transfer", params), new AlipayFundTransUniTransferResponse({}));
  }

  async query(payFundOrderId: string): Promise<AlipayFundTransCommonQueryResponse> {
    let params : {[key: string ]: any} = {
      pay_fund_order_id: payFundOrderId,
      product_code: "TRANS_ACCOUNT_NO_PWD",
      biz_scene: "DIRECT_TRANSFER",
    };
    return $tea.cast<AlipayFundTransCommonQueryResponse>(await this._kernel.invoke("alipay.fund.trans.common.query", params), new AlipayFundTransCommonQueryResponse({}));
  }

}
