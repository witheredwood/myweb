(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "tslib", "@alicloud/mpserverless-core", "./codec", "./error"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require("tslib");
    var mpserverless_core_1 = require("@alicloud/mpserverless-core");
    var codec_1 = require("./codec");
    var error_1 = require("./error");
    var MPHTTPTransport = (function (_super) {
        tslib_1.__extends(MPHTTPTransport, _super);
        function MPHTTPTransport(endpoint) {
            return _super.call(this, endpoint) || this;
        }
        MPHTTPTransport.prototype.setUserService = function (userService) {
            this.userService = userService;
        };
        MPHTTPTransport.prototype.setRequest = function (request) {
            mpserverless_core_1.assert(request, '初始化时缺少 request 参数');
            this.httpRequest = request;
        };
        MPHTTPTransport.prototype.getEncoder = function (prefix) {
            return new codec_1.MPHTTPRequestEncoder(this.endpoint, this.spaceId);
        };
        MPHTTPTransport.prototype.request = function (encoder, retried) {
            if (retried === void 0) { retried = false; }
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var cloned, newEncoder, encoded, decoded, e_1, isUnAuthorized;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            cloned = encoder.clone();
                            return [4, this.userService.setRequestToken(encoder, retried)];
                        case 1:
                            newEncoder = _a.sent();
                            if (this.ua) {
                                newEncoder.setBaseHeaders({
                                    'x-serverless-ua': this.ua,
                                });
                            }
                            _a.label = 2;
                        case 2:
                            _a.trys.push([2, 4, , 7]);
                            encoded = newEncoder.encodeAsHTTPRequestObject({
                                timeout: this.timeout,
                                dataType: 'json',
                            });
                            this.logger.info('request encode data', encoded);
                            return [4, this.httpRequest(encoded)];
                        case 3:
                            decoded = _a.sent();
                            return [2, decoded];
                        case 4:
                            e_1 = _a.sent();
                            this.logger.error('request error', e_1);
                            isUnAuthorized = e_1.error.code === 'GATEWAY_INVALID_TOKEN'
                                || e_1.error.code === 'InvalidParameter.InvalidToken';
                            if (!isUnAuthorized) return [3, 6];
                            if (retried) {
                                throw new error_1.bizError.UnauthorizedError('授权 token 已过期，重新获取失败');
                            }
                            return [4, this.request(cloned, true)];
                        case 5: return [2, _a.sent()];
                        case 6:
                            if (e_1.error) {
                                throw e_1.error;
                            }
                            throw e_1;
                        case 7: return [2];
                    }
                });
            });
        };
        MPHTTPTransport.prototype.wrapApi = function (myMethod) {
            var _this = this;
            return function (args) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                var res, decoder, response;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, myMethod(args)];
                        case 1:
                            res = _a.sent();
                            this.logger.info('completed request');
                            this.logger.info(JSON.stringify(res, null, 2));
                            decoder = new codec_1.MPHTTPResponseDecoder();
                            response = decoder.decode(res);
                            if (response.error) {
                                throw response;
                            }
                            return [2, response];
                    }
                });
            }); };
        };
        return MPHTTPTransport;
    }(mpserverless_core_1.HTTPTransport));
    exports.MPHTTPTransport = MPHTTPTransport;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RyYW5zcG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBQSxpRUFLcUM7SUFFckMsaUNBSWlCO0lBQ2pCLGlDQUFtQztJQUVuQztRQUFxQywyQ0FBYTtRQUloRCx5QkFDRSxRQUFnQjttQkFFaEIsa0JBQU0sUUFBUSxDQUFDO1FBQ2pCLENBQUM7UUFNTSx3Q0FBYyxHQUFyQixVQUFzQixXQUFXO1lBQy9CLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQ2pDLENBQUM7UUFNTSxvQ0FBVSxHQUFqQixVQUFrQixPQUFPO1lBQ3ZCLDBCQUFNLENBQUMsT0FBTyxFQUFFLG1CQUFtQixDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7UUFDN0IsQ0FBQztRQU1NLG9DQUFVLEdBQWpCLFVBQWtCLE1BQWU7WUFDL0IsT0FBTyxJQUFJLDRCQUFvQixDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9ELENBQUM7UUFPWSxpQ0FBTyxHQUFwQixVQUNFLE9BQTZCLEVBQzdCLE9BQXdCO1lBQXhCLHdCQUFBLEVBQUEsZUFBd0I7Ozs7Ozs0QkFFbEIsTUFBTSxHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQzs0QkFFWixXQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBQTs7NEJBQXJFLFVBQVUsR0FBRyxTQUF3RDs0QkFFM0UsSUFBSSxJQUFJLENBQUMsRUFBRSxFQUFFO2dDQUNYLFVBQVUsQ0FBQyxjQUFjLENBQUM7b0NBQ3hCLGlCQUFpQixFQUFFLElBQUksQ0FBQyxFQUFFO2lDQUMzQixDQUFDLENBQUM7NkJBQ0o7Ozs7NEJBR08sT0FBTyxHQUFHLFVBQVUsQ0FBQyx5QkFBeUIsQ0FBQztnQ0FDbkQsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO2dDQUNyQixRQUFRLEVBQUUsTUFBTTs2QkFDakIsQ0FBQyxDQUFDOzRCQUNILElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxDQUFDOzRCQUNqQyxXQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLEVBQUE7OzRCQUF6QyxPQUFPLEdBQUcsU0FBK0I7NEJBQy9DLFdBQU8sT0FBTyxFQUFDOzs7NEJBRWYsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLEdBQUMsQ0FBQyxDQUFDOzRCQUNoQyxjQUFjLEdBQUcsR0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssdUJBQXVCO21DQUM1RCxHQUFDLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSywrQkFBK0IsQ0FBQztpQ0FFaEQsY0FBYyxFQUFkLGNBQWM7NEJBQ2hCLElBQUksT0FBTyxFQUFFO2dDQUNYLE1BQU0sSUFBSSxnQkFBUSxDQUFDLGlCQUFpQixDQUFDLHFCQUFxQixDQUFDLENBQUM7NkJBQzdEOzRCQUNNLFdBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUE7Z0NBQXZDLFdBQU8sU0FBZ0MsRUFBQzs7NEJBRTFDLElBQUksR0FBQyxDQUFDLEtBQUssRUFBRTtnQ0FDWCxNQUFNLEdBQUMsQ0FBQyxLQUFLLENBQUM7NkJBQ2Y7NEJBQ0QsTUFBTSxHQUFDLENBQUM7Ozs7O1NBRVg7UUFNTSxpQ0FBTyxHQUFkLFVBQWUsUUFBUTtZQUF2QixpQkFZQztZQVhDLE9BQU8sVUFBTSxJQUFJOzs7O2dDQUNILFdBQU0sUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFBOzs0QkFBMUIsR0FBRyxHQUFHLFNBQW9COzRCQUNoQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOzRCQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDekMsT0FBTyxHQUFHLElBQUksNkJBQXFCLEVBQUUsQ0FBQzs0QkFDdEMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7NEJBQ3JDLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRTtnQ0FDbEIsTUFBTSxRQUFRLENBQUM7NkJBQ2hCOzRCQUNELFdBQU8sUUFBUSxFQUFDOzs7aUJBQ2pCLENBQUM7UUFDSixDQUFDO1FBQ0gsc0JBQUM7SUFBRCxDQUFDLEFBakdELENBQXFDLGlDQUFhLEdBaUdqRDtJQWpHWSwwQ0FBZSJ9