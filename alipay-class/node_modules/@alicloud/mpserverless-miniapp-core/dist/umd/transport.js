"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const mpserverless_core_1 = require("@alicloud/mpserverless-core");
const codec_1 = require("./codec");
const error_1 = require("./error");
class MPHTTPTransport extends mpserverless_core_1.HTTPTransport {
    constructor(endpoint) {
        super(endpoint);
    }
    setUserService(userService) {
        this.userService = userService;
    }
    setRequest(request) {
        mpserverless_core_1.assert(request, '初始化时缺少 request 参数');
        this.httpRequest = request;
    }
    getEncoder(prefix) {
        return new codec_1.MPHTTPRequestEncoder(this.endpoint, this.spaceId);
    }
    request(encoder, retried = false) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const cloned = encoder.clone();
            const newEncoder = yield this.userService.setRequestToken(encoder, retried);
            if (this.ua) {
                newEncoder.setBaseHeaders({
                    'x-serverless-ua': this.ua,
                });
            }
            try {
                const encoded = newEncoder.encodeAsHTTPRequestObject({
                    timeout: this.timeout,
                    dataType: 'json',
                });
                this.logger.info('request encode data', encoded);
                const decoded = yield this.httpRequest(encoded);
                return decoded;
            }
            catch (e) {
                this.logger.error('request error', e);
                const isUnAuthorized = e.error.code === 'GATEWAY_INVALID_TOKEN'
                    || e.error.code === 'InvalidParameter.InvalidToken';
                if (isUnAuthorized) {
                    if (retried) {
                        throw new error_1.bizError.UnauthorizedError('授权 token 已过期，重新获取失败');
                    }
                    return yield this.request(cloned, true);
                }
                if (e.error) {
                    throw e.error;
                }
                throw e;
            }
        });
    }
    wrapApi(myMethod) {
        return (args) => tslib_1.__awaiter(this, void 0, void 0, function* () {
            const res = yield myMethod(args);
            this.logger.info('completed request');
            this.logger.info(JSON.stringify(res, null, 2));
            const decoder = new codec_1.MPHTTPResponseDecoder();
            const response = decoder.decode(res);
            if (response.error) {
                throw response;
            }
            return response;
        });
    }
}
exports.MPHTTPTransport = MPHTTPTransport;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RyYW5zcG9ydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtRUFLcUM7QUFFckMsbUNBSWlCO0FBQ2pCLG1DQUFtQztBQUVuQyxNQUFhLGVBQWdCLFNBQVEsaUNBQWE7SUFJaEQsWUFDRSxRQUFnQjtRQUVoQixLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEIsQ0FBQztJQU1NLGNBQWMsQ0FBQyxXQUFXO1FBQy9CLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO0lBQ2pDLENBQUM7SUFNTSxVQUFVLENBQUMsT0FBTztRQUN2QiwwQkFBTSxDQUFDLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDO0lBQzdCLENBQUM7SUFNTSxVQUFVLENBQUMsTUFBZTtRQUMvQixPQUFPLElBQUksNEJBQW9CLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQU9ZLE9BQU8sQ0FDbEIsT0FBNkIsRUFDN0IsVUFBbUIsS0FBSzs7WUFFeEIsTUFBTSxNQUFNLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO1lBRS9CLE1BQU0sVUFBVSxHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBRTVFLElBQUksSUFBSSxDQUFDLEVBQUUsRUFBRTtnQkFDWCxVQUFVLENBQUMsY0FBYyxDQUFDO29CQUN4QixpQkFBaUIsRUFBRSxJQUFJLENBQUMsRUFBRTtpQkFDM0IsQ0FBQyxDQUFDO2FBQ0o7WUFFRCxJQUFJO2dCQUNGLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyx5QkFBeUIsQ0FBQztvQkFDbkQsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO29CQUNyQixRQUFRLEVBQUUsTUFBTTtpQkFDakIsQ0FBQyxDQUFDO2dCQUNILElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUNqRCxNQUFNLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2hELE9BQU8sT0FBTyxDQUFDO2FBQ2hCO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN0QyxNQUFNLGNBQWMsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyx1QkFBdUI7dUJBQzVELENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLCtCQUErQixDQUFDO2dCQUVwRCxJQUFJLGNBQWMsRUFBRTtvQkFDbEIsSUFBSSxPQUFPLEVBQUU7d0JBQ1gsTUFBTSxJQUFJLGdCQUFRLENBQUMsaUJBQWlCLENBQUMscUJBQXFCLENBQUMsQ0FBQztxQkFDN0Q7b0JBQ0QsT0FBTyxNQUFNLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUN6QztnQkFDRCxJQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUU7b0JBQ1gsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDO2lCQUNmO2dCQUNELE1BQU0sQ0FBQyxDQUFDO2FBQ1Q7UUFDSCxDQUFDO0tBQUE7SUFNTSxPQUFPLENBQUMsUUFBUTtRQUNyQixPQUFPLENBQU0sSUFBSSxFQUFDLEVBQUU7WUFDbEIsTUFBTSxHQUFHLEdBQUcsTUFBTSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQyxNQUFNLE9BQU8sR0FBRyxJQUFJLDZCQUFxQixFQUFFLENBQUM7WUFDNUMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQyxJQUFJLFFBQVEsQ0FBQyxLQUFLLEVBQUU7Z0JBQ2xCLE1BQU0sUUFBUSxDQUFDO2FBQ2hCO1lBQ0QsT0FBTyxRQUFRLENBQUM7UUFDbEIsQ0FBQyxDQUFBLENBQUM7SUFDSixDQUFDO0NBQ0Y7QUFqR0QsMENBaUdDIn0=