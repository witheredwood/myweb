// This file is auto-generated, don't edit it
import CloudKernel from 'mpserverless-sdk-core';
import { Readable } from 'stream';
import * as $tea from '@alicloud/tea-typescript';

export class IdentityParam extends $tea.Model {
  identityType: string;
  certType: string;
  certName: string;
  certNo: string;
  static names(): { [key: string]: string } {
    return {
      identityType: 'identityType',
      certType: 'certType',
      certName: 'certName',
      certNo: 'certNo',
    };
  }

  static types(): { [key: string]: any } {
    return {
      identityType: 'string',
      certType: 'string',
      certName: 'string',
      certNo: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class MerchantConfig extends $tea.Model {
  returnUrl: string;
  static names(): { [key: string]: string } {
    return {
      returnUrl: 'returnUrl',
    };
  }

  static types(): { [key: string]: any } {
    return {
      returnUrl: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class AlipayUserCertifyOpenInitializeResponse extends $tea.Model {
  code: string;
  msg: string;
  subCode: string;
  subMsg: string;
  certifyId: string;
  static names(): { [key: string]: string } {
    return {
      code: 'code',
      msg: 'msg',
      subCode: 'subCode',
      subMsg: 'subMsg',
      certifyId: 'certifyId',
    };
  }

  static types(): { [key: string]: any } {
    return {
      code: 'string',
      msg: 'string',
      subCode: 'string',
      subMsg: 'string',
      certifyId: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class AlipayUserCertifyOpenCertifyResponse extends $tea.Model {
  body: string;
  static names(): { [key: string]: string } {
    return {
      body: 'body',
    };
  }

  static types(): { [key: string]: any } {
    return {
      body: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}

export class AlipayUserCertifyOpenQueryResponse extends $tea.Model {
  code: string;
  msg: string;
  subCode: string;
  subMsg: string;
  passed: string;
  identityInfo: string;
  materialInfo: string;
  static names(): { [key: string]: string } {
    return {
      code: 'code',
      msg: 'msg',
      subCode: 'subCode',
      subMsg: 'subMsg',
      passed: 'passed',
      identityInfo: 'identityInfo',
      materialInfo: 'materialInfo',
    };
  }

  static types(): { [key: string]: any } {
    return {
      code: 'string',
      msg: 'string',
      subCode: 'string',
      subMsg: 'string',
      passed: 'string',
      identityInfo: 'string',
      materialInfo: 'string',
    };
  }

  constructor(map?: { [key: string]: any }) {
    super(map);
  }
}


export default class Client {
  _kernel: CloudKernel;

  constructor(_kernel: CloudKernel) {
    this._kernel = _kernel;
  }


  async init(outerOrderNo: string, bizCode: string, identityParam: IdentityParam, merchantConfig: MerchantConfig): Promise<AlipayUserCertifyOpenInitializeResponse> {
    let params : {[key: string ]: any} = {
      outer_order_no: outerOrderNo,
      biz_code: bizCode,
      identity_param: identityParam,
      merchant_config: merchantConfig,
    };
    return $tea.cast<AlipayUserCertifyOpenInitializeResponse>(await this._kernel.invoke("alipay.user.certify.open.initialize", params), new AlipayUserCertifyOpenInitializeResponse({}));
  }

  async certify(certifyId: string): Promise<AlipayUserCertifyOpenCertifyResponse> {
    let params : {[key: string ]: any} = {
      certify_id: certifyId,
      pageExec: "get",
    };
    let result = await this._kernel.invokeWithPageExe("alipay.user.certify.open.certify", params);
    let response : {[key: string ]: string} = {
      body: result,
    };
    return $tea.cast<AlipayUserCertifyOpenCertifyResponse>(response, new AlipayUserCertifyOpenCertifyResponse({}));
  }

  async query(certifyId: string): Promise<AlipayUserCertifyOpenQueryResponse> {
    let params : {[key: string ]: any} = {
      certify_id: certifyId,
    };
    return $tea.cast<AlipayUserCertifyOpenQueryResponse>(await this._kernel.invoke("alipay.user.certify.open.query", params), new AlipayUserCertifyOpenQueryResponse({}));
  }

}
