import CloudKernel from 'mpserverless-sdk-core';
import * as $tea from '@alicloud/tea-typescript';
export declare class IdentityParam extends $tea.Model {
    identityType: string;
    certType: string;
    certName: string;
    certNo: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class MerchantConfig extends $tea.Model {
    returnUrl: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlipayUserCertifyOpenInitializeResponse extends $tea.Model {
    code: string;
    msg: string;
    subCode: string;
    subMsg: string;
    certifyId: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlipayUserCertifyOpenCertifyResponse extends $tea.Model {
    body: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export declare class AlipayUserCertifyOpenQueryResponse extends $tea.Model {
    code: string;
    msg: string;
    subCode: string;
    subMsg: string;
    passed: string;
    identityInfo: string;
    materialInfo: string;
    static names(): {
        [key: string]: string;
    };
    static types(): {
        [key: string]: any;
    };
    constructor(map?: {
        [key: string]: any;
    });
}
export default class Client {
    _kernel: CloudKernel;
    constructor(_kernel: CloudKernel);
    init(outerOrderNo: string, bizCode: string, identityParam: IdentityParam, merchantConfig: MerchantConfig): Promise<AlipayUserCertifyOpenInitializeResponse>;
    certify(certifyId: string): Promise<AlipayUserCertifyOpenCertifyResponse>;
    query(certifyId: string): Promise<AlipayUserCertifyOpenQueryResponse>;
}
